version: "3.9"
services:
  bot:
    image: ruby
    entrypoint: /opt/app/backend/docker-entrypoint.sh ${SERVER_PORT}
    environment:
      - TZ=${TZ}
      - REDDIT_SECRET=${REDDIT_SECRET}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - BOT_USER_AGENT="elbunuelo/Goalbot-1.0"
      - API_URL=${API_URL}
      - REDIS_URL=${REDIS_URL}
      - SERVER_PORT=${SERVER_PORT}
      - CREATE_DB=${CREATE_DB:-'false'}
      - DISABLE_DATABASE_ENVIRONMENT_CHECK=1
      - RAILS_ENV=${RAILS_ENV:-'production'}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    volumes:
      - ./:/opt/app
    restart: unless-stopped
    depends_on:
      - redis
      - db
  video-finder:
    image: ruby
    entrypoint: /opt/app/backend/video-finder-entrypoint.sh
    environment:
      - TZ=${TZ}
      - REDDIT_SECRET=${REDDIT_SECRET}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - BOT_USER_AGENT="elbunuelo/Goalbot-1.0"
      - API_URL=${API_URL}
      - REDIS_URL=${REDIS_URL}
      - SERVER_PORT=${SERVER_PORT}
      - CREATE_DB=${CREATE_DB:-'false'}
      - DISABLE_DATABASE_ENVIRONMENT_CHECK=1
      - RAILS_ENV=${RAILS_ENV:-'production'}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    volumes:
      - ./:/opt/app
    restart: unless-stopped
    depends_on:
      - bot
  telegram-client:
    image: ruby
    entrypoint: /opt/app/backend/telegram-client-entrypoint.sh
    environment:
      - TZ=${TZ}
      - REDDIT_SECRET=${REDDIT_SECRET}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - BOT_USER_AGENT="elbunuelo/Goalbot-1.0"
      - API_URL=${API_URL}
      - REDIS_URL=${REDIS_URL}
      - SERVER_PORT=${SERVER_PORT}
      - CREATE_DB=${CREATE_DB:-'false'}
      - DISABLE_DATABASE_ENVIRONMENT_CHECK=1
      - RAILS_ENV=${RAILS_ENV:-'production'}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    volumes:
      - ./:/opt/app
    restart: unless-stopped
    depends_on:
      - bot
  resque:
    image: ruby
    entrypoint: /opt/app/backend/resque-entrypoint.sh
    environment:
      - TZ=${TZ}
      - REDDIT_SECRET=${REDDIT_SECRET}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - BOT_USER_AGENT="elbunuelo/Goalbot-1.0"
      - API_URL=${API_URL}
      - REDIS_URL=${REDIS_URL}
      - SERVER_PORT=${SERVER_PORT}
      - CREATE_DB=${CREATE_DB:-'false'}
      - DISABLE_DATABASE_ENVIRONMENT_CHECK=1
      - RAILS_ENV=${RAILS_ENV:-'production'}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    volumes:
      - ./:/opt/app
    restart: unless-stopped
    depends_on:
      - redis
      - db
  resque-scheduler:
    image: ruby
    entrypoint: /opt/app/backend/scheduler-entrypoint.sh
    environment:
      - TZ=${TZ}
      - REDDIT_SECRET=${REDDIT_SECRET}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - BOT_USER_AGENT="elbunuelo/Goalbot-1.0"
      - API_URL=${API_URL}
      - REDIS_URL=${REDIS_URL}
      - SERVER_PORT=${SERVER_PORT}
      - CREATE_DB=${CREATE_DB:-'false'}
      - DISABLE_DATABASE_ENVIRONMENT_CHECK=1
      - RAILS_ENV=${RAILS_ENV:-'production'}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    volumes:
      - ./:/opt/app
    restart: unless-stopped
    depends_on:
      - redis
      - db
  redis:
    image: redis
    command: redis-server
    volumes:
      - ./redis-data:/var/lib/redis
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - REDIS_REPLICATION_MODE=master
  db:
    image: postgres
    environment:
      - TZ=${TZ}
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=goalbot_123
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=goalbot
    volumes:
      - ./postgres_data:/var/lib/postgresql
    restart: unless-stopped
